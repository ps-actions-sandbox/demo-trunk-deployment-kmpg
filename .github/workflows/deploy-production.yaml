on:
  release:
    types: [published]
    # enables manual triggers
  workflow_dispatch:
    inputs:
      release_id:
        description: "Release tag id to be deployed"
        required: true
        type: string

jobs:
  release-production-manual:
    if: startsWith(github.event.inputs.release_id, 'r-')
    environment: production
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Get Artifact from Release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: ${{ github.event.inputs.release_id }}
          file: cdk.out.zip
      - name: Unzip Artifact
        run: unzip cdk.out.zip
      # - name: Configure AWS credentials
      #  uses: aws-actions/configure-aws-credentials@v1-node16
      #  with:
      #    role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
      #    aws-region: eu-central-1
      #- name: Deploy Artifact
      #  run: npx cdk deploy --app "./cdk.out/assembly-Prod" --all --concurrency 10 --method=direct --require-approval never
      - name: Deploy Artifact
        run: echo "Deploy cdk as release-production-manual" 
  release-production-auto:
    name: Release to Production
    if: startsWith(github.ref_name, 'r-')
    environment: production
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Get Artifact from Release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: ${{ github.event.release.id }}
          file: cdk.out.zip
      - name: Unzip Artifact
        run: unzip cdk.out.zip
      # - name: Configure AWS credentials
      #  uses: aws-actions/configure-aws-credentials@v1-node16
      #  with:
      #    role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
      #    aws-region: eu-central-1
      #- name: Deploy Artifact
      #  run: npx cdk deploy --app "./cdk.out/assembly-Prod" --all --concurrency 10 --method=direct --require-approval never
      - name: Deploy Artifact
        run: echo "Deploy cdk as release-production-auto" 
